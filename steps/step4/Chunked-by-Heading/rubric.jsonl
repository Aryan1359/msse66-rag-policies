{"doc_id": "rubric", "chunk_id": 0, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "AI\nEngineering\nProject\n\nProject Overview\n\nFor this project, you will be designing, building, and evaluating a Retrieval-Augmented\nGeneration (RAG) LLM-based application that answers user questions about a corpus of\ncompany policies & procedures. You will then deploy the application to a free-tier host\n(e.g., Render, Railway) with a basic CI/CD pipeline (e.g., GitHub Actions) that triggers\ndeployment on push/PR when the app builds successfully. Finally, you will demonstrate\nthe system via a screen-share video showing key features of your deployed application,\nand a quick walkthrough of your design, evaluation and CI/CD run. You can complete this\nproject either individually or as a group of no more than three people.\n\nWhile you can fully hand code this project if you wish, you are highly encouraged to\nutilize leading AI code generation models/AI IDEs/async agents to assist in rapidly\nproducing your solution, being sure to describe in broad terms how you made use of\nthem. Here are some examples of very useful AI tools you may wish to consider. You will\nbe graded on the quality and functionality of the application and how well it meets the\nproject requirements—no given proportion of the code is required to be hand coded.\n\nLearning Outcomes"}
{"doc_id": "rubric", "chunk_id": 1, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "When completed successfully, this project will enable you to:\n\n●  Demonstrate excellent AI engineering skills\n●  Demonstrate the ability to select appropriate AI application design and\n\narchitecture\nImplement a working LLM-based application including RAG\n\n●\n●  Evaluate the performance of an LLM-based application\n●  Utilize AI tooling as appropriate\n\n © 2025 Quantic Holdings, Inc. All rights reserved.      6/23/21\n\n\n\n\n\n\n\n\nAI Engineering Project\n\nProject Description\n\nFirst, assemble a small but coherent corpus of documents outlining company policies &\nprocedures - about 5–20 short markdown/HTML/PDF/TXT files totaling 30–120 pages.\nYou may author them yourself (with AI assistance) or use policies that you are aware of\nfrom your own organization that can be used for this assignment. Students must use a\ncorpus they can legally include in the repo or load at runtime (e.g., your own synthetic\npolicies, your organization’s employee policy documents etc.)—no private/paid data is\nrequired. Additionally, you should define success metrics for your application (see the\n“Evaluation” step below), including at least one information-quality metric (e.g.,\ngroundedness or citation accuracy) and one system metric (e.g., latency).\n\nUse free or zero-cost options when possible e.g., OpenRouter’s free tier\n(https://openrouter.ai/docs/api-reference/limits), Groq\n(https://console.groq.com/docs/rate-limits), or your own paid API keys if you have them.\nFor embedding models, free-tier options are available from Cohere, Voyage,\nHuggingFace and others\n\nComplete the following steps to fully develop, deploy, and evaluate your application:\n\n1.  Environment and Reproducibility\n\n○  Create a virtual environment (e.g., venv, conda).\n○  List dependencies in requirements.txt (or environment.yml).\n○  Provide a README.md with setup + run instructions.\n○  Set fixed seeds where/if applicable (for deterministic chunking or\n\nevaluation sampling).\n\n2.  Ingestion and Indexing\n\n○  Parse & clean documents (handle PDFs/HTML/md/txt).\n○  Chunk documents (e.g., by headings or token windows with overlap).\n○  Embed chunks with a free embedding model or a free-tier API.\n○  Store the embedded document chunks in a local or lightweight vector\ndatabase (e.g. Chroma or optionally a cloud-hosted vector store like\nPinecone, etc.)\n\n○  Store vectors in a local/vector DB or cloud DB (e.g., Chroma, Pinecone, etc.)\n\n3.  Retrieval and Generation (RAG)\n\n○  To build your RAG pipeline you may use frameworks such as LangChain to\n\nhandle retrieval, prompt chaining, and API calls, or implement these\nmanually.\nImplement Top-k retrieval with optional re-ranking.\n\n○\n\n © 2025 Quantic Holdings, Inc. All rights reserved.      6/23/21                                        2\n\n\n\n\nAI Engineering Project\n\n○  Build a prompting strategy that injects retrieved chunks (and\n\ncitations/sources) into the LLM context."}
{"doc_id": "rubric", "chunk_id": 2, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "○  Add basic guardrails:\n\n■  Refuse to answer outside the corpus (“I can only answer about our\n\npolicies”),\n\n■  Limit output length,\n■  Always cite source doc IDs/titles for answers.\n\n4.  Web Application\n\n○  Students can use Flask, Streamlit or alternative for the Web app. LangChain\n\nis recommended for orchestration, but is optional."}
{"doc_id": "rubric", "chunk_id": 3, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "○  Endpoints/UI:\n■\n■\n\n/   - Web chat interface - text box for user input\n/chat - API endpoint that receives user questions (POST) and returns\nmodel-generated answers with citations and snippets (link to source\nand show snippet).\n/health - returns simple status via JSON.\n\n■\n5.  Deployment\n\n○  For production hosting use Render or Railway free tiers; students may\n\nalternatively use any other free-tier providers of their choice.\n\n○  Configure environment variables (e.g. API keys, model endpoints, DB\n\nrelated etc.).\n\n○  Ensure the app is publicly accessible at a shareable URL."}
{"doc_id": "rubric", "chunk_id": 4, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "6.  CI/CD\n\n○  Minimal automated testing is sufficient for this assignment (a build/run\n\ncheck, optional smoke test)."}
{"doc_id": "rubric", "chunk_id": 5, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "○  Create a GitHub Actions workflow that on push/PR:\n\nInstalls dependencies,\n\n■\n■  Runs a build/start check (e.g., python -m pip install -r\n\nrequirements.txt and python -c \"import app\" or pytest -q if you add\ntests),\n\n■  On success in main, deploy to your host (Render/Railway action or\n\nvia webhook/API).\n\n7.  Evaluation of the LLM Application\n\n○  Provide a small evaluation set of 15–30 questions covering various policy"}
{"doc_id": "rubric", "chunk_id": 6, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "topics (PTO, security, expense, remote work, holidays, etc.). Report:"}
{"doc_id": "rubric", "chunk_id": 7, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "■  Answer Quality (required):\n\n1.  Groundedness: % of answers whose content is factually\nconsistent with and fully supported by the retrieved\nevidence—i.e., the answer contains no information that is\nabsent or contradicted in the context.\n\n © 2025 Quantic Holdings, Inc. All rights reserved.      6/23/21                                        3\n\n\n\nAI Engineering Project\n\n2.  Citation Accuracy: % of answers whose listed citations\n\ncorrectly point to the specific passage(s) that support the\ninformation stated—i.e., the attribution is correct and not\nmisleading.\n\n3.  Exact/Partial Match (optional): % of answers that exactly or\n\npartially match a short gold answer you provide."}
{"doc_id": "rubric", "chunk_id": 8, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "■  System Metrics (required):\n\n1.  Latency (p50/p95) from request to answer for 10–20 queries.\n\n■  Ablations (optional): compare retrieval k, chunk size, or prompt\n\nvariants.\n8.  Design Documentation\n\n○  Briefly justify design choices (embedding model, chunking, k, prompt\n\nformat, vector store).\n\nSubmission Guidelines"}
{"doc_id": "rubric", "chunk_id": 9, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "Your final submission should consist of two links:\n\n●  A link to an accessible software repository (a GitHub repo) containing all your\n\ndeveloped code and the items listed below. You must share your repository with\nthe GitHub account, quantic-grader.\n\no  The GitHub repository should include a link to the deployed version of\n\nyour RAG LLM-based application (in file deployed.md)\n\no  The GitHub repository must include a README.md file indicating setup and\n\nrun instructions\n\no  The GitHub repository must also include a brief design and evaluation"}
{"doc_id": "rubric", "chunk_id": 10, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "document (design-and-evaluation.md) listing and explaining:\n\ni)\n\nii)\n\ndesign and architecture decisions made - and why they were made,\nincluding technology choices\nsummary of your evaluation approach and results for your RAG\nsystem\n\no  The GitHub repository must include an ai-use.md file that briefly describes\n\nwhich AI code tools you used and how.\n\n●  A link to a recorded screen-share demonstration video of the working RAG\n\nLLM-based application, involving screen capture of it being used with voiceover\n\no  All group members must speak and be present on camera.\no  All group members must show their government ID.\no  The demonstration/presentation should be between 5 and 10 minutes long.\n\nTo submit your project, please click on the \"Submit Project\" button on your dashboard\nand follow the steps provided. If you are submitting your project as a group, please\n\n © 2025 Quantic Holdings, Inc. All rights reserved.      6/23/21                                        4\n\n\n\n\nAI Engineering Project\n\nProject Rubric\n\nScores 2 and above are considered passing. Students who receive a 1 or 0 will not get\ncredit for the assignment and must revise and resubmit to receive a passing grade.\n\nScore\n\nDescription\n\n5"}
{"doc_id": "rubric", "chunk_id": 11, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "●  Addresses ALL of the project requirements, but not limited to:\n\n○  Outstanding RAG application with correct responses with matching\n\ncitations, ingest and indexing works\n\n○  Excellent, well-structured application architecture\n○  Public deployment on Render, Railway (or equivalent) fully functional\n○  CI/CD runs on push/PR and deploys on success\n○  Excellent documentation of design choices.\n○  Excellent evaluation results, which includes groundedness, citation\n\naccuracy, and latency\n\n○  Excellent, clear demo of features, design and evaluation"}
{"doc_id": "rubric", "chunk_id": 12, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "●  Addresses MOST of the project requirements, but not limited to:\n\n○  Excellent RAG application with correct responses with generally\n\nmatching citations, ingest and indexing works\n○  Very good, well-structured application architecture\n○  Public deployment on Render, Railway (or equivalent) almost fully\n\nfunctional\n\n○  CI/CD runs on push/PR and deploys on success\n○  Very good documentation of design choices.\n○  Very good evaluation results which includes groundedness, citation\n\naccuracy, and latency\n\n○  Very good, clear demo of features, design and evaluation"}
{"doc_id": "rubric", "chunk_id": 13, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "●  Addresses SOME of the project requirements, but not limited to:\n\n○  Very good RAG application with mainly correct responses with\n\ngenerally matching citations, ingest and indexing works\n\n○  Good, well-structured application architecture\n○  Public deployment on Render, Railway (or equivalent) almost fully\n\nfunctional\n\n○  CI/CD runs on push/PR and deploys on success\n○  Good documentation of design choices.\n\n4\n\n3\n\n © 2025 Quantic Holdings, Inc. All rights reserved.      6/23/21                                        6\n\n\n\n\n\n\n\nAI Engineering Project\n\n○  Good evaluation results which includes most of groundedness,\n\ncitation accuracy, and latency\n\n○  Good, clear demo of features, design and evaluation."}
{"doc_id": "rubric", "chunk_id": 14, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "●  Addresses FEW of the project requirements, but not limited to:\n\n○  Passable RAG application with limited correct responses with few\n\nmatching citations, ingest and indexing works partially\n\n○  Passable application architecture\n○  Public deployment on Render, Railway (or equivalent) not fully\n\nfunctional\n\n○  CI/CD runs on push/PR and deploys on success\n○  Passable documentation of design choices.\n○  Passable evaluation results which includes only some of\n\ngroundedness, citation accuracy, and latency\n○  Passable demo of features, design and evaluation\n\n●  Addresses the project but MOST of the project requirements are missing,"}
{"doc_id": "rubric", "chunk_id": 15, "method": "heading", "params": {"mode": "heuristic", "min_heading_gap": 1, "max_chunk_len": null}, "text": "but not limited to:\n\nIncomplete app; not deployed,\n\n○\n○  No CI/CD,\n○  No to very limited evaluation\n○  No design documentation\n○  No demo of application\n\n●  The student either did not complete the assignment, plagiarized all or part\n\nof the assignment, or completely failed to address the project requirements.\n\n2\n\n1\n\n0\n\n © 2025 Quantic Holdings, Inc. All rights reserved.      6/23/21                                        7"}
